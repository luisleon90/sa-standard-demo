{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/run-results/v6.json", "dbt_version": "2024.9.238", "generated_at": "2024-09-09T18:01:18.850183Z", "invocation_id": "322cc397-f858-4617-ba37-4f2bef9dfa23", "env": {}}, "results": [{"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-09T18:00:50.312645Z", "completed_at": "2024-09-09T18:00:50.316181Z"}, {"name": "execute", "started_at": "2024-09-09T18:00:50.316609Z", "completed_at": "2024-09-09T18:00:51.408468Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 1.0967762470245361, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01b6eb98-0905-598c-0004-7d8313957a46"}, "message": "SUCCESS 1", "failures": null, "unique_id": "model.analytics.stg_tpch_orders", "compiled": true, "compiled_code": "with source as (\n\n    select * from raw.tpch_now.orders\n\n),\n\nrename as (\n\n    select\n    \n        o_orderkey as order_key,\n        o_custkey as customer_key,\n        o_orderstatus as status_code,\n        o_totalprice as total_price,\n        o_orderdate as order_date,\n        o_orderpriority as priority_code,\n        o_clerk as clerk_name,\n        o_shippriority as ship_priority,\n        o_comment as comment\n\n    from source\n\n)\n\nselect * from rename", "relation_name": "analytics.dbt_lleon.stg_tpch_orders"}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2024-09-09T18:00:51.433301Z", "completed_at": "2024-09-09T18:00:51.449193Z"}, {"name": "execute", "started_at": "2024-09-09T18:00:51.453004Z", "completed_at": "2024-09-09T18:00:51.934316Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.517756462097168, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01b6eb98-0905-5985-0004-7d8313956cda"}, "message": null, "failures": 0, "unique_id": "test.analytics.stg_tpch_orders_assert_positive_price", "compiled": true, "compiled_code": "\n\nwith orders as ( select * from analytics.dbt_lleon.stg_tpch_orders )\n\nselect *\nfrom   orders \nwhere  total_price < 0", "relation_name": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2024-09-09T18:00:51.436308Z", "completed_at": "2024-09-09T18:00:51.454485Z"}, {"name": "execute", "started_at": "2024-09-09T18:00:51.457145Z", "completed_at": "2024-09-09T18:00:51.952406Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.5353739261627197, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01b6eb98-0905-5985-0004-7d8313956cde"}, "message": null, "failures": 0, "unique_id": "test.analytics.unique_stg_tpch_orders_order_key.bd29f13cc9", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    order_key as unique_field,\n    count(*) as n_records\n\nfrom analytics.dbt_lleon.stg_tpch_orders\nwhere order_key is not null\ngroup by order_key\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2024-09-09T18:00:51.422344Z", "completed_at": "2024-09-09T18:00:51.449693Z"}, {"name": "execute", "started_at": "2024-09-09T18:00:51.454931Z", "completed_at": "2024-09-09T18:00:52.329640Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.9136512279510498, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01b6eb98-0905-5985-0004-7d8313956cfa"}, "message": null, "failures": 0, "unique_id": "test.analytics.not_null_stg_tpch_orders_order_key.bb22e75ae8", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect order_key\nfrom analytics.dbt_lleon.stg_tpch_orders\nwhere order_key is null\n\n\n", "relation_name": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2024-09-09T18:00:51.419386Z", "completed_at": "2024-09-09T18:00:51.448476Z"}, {"name": "execute", "started_at": "2024-09-09T18:00:51.450146Z", "completed_at": "2024-09-09T18:00:52.358970Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.943556547164917, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01b6eb98-0905-598c-0004-7d8313957aaa"}, "message": null, "failures": 0, "unique_id": "test.analytics.macro_stg_tpch_orders_assert_pos_price", "compiled": true, "compiled_code": "\n\n\n\n\nselect * from analytics.dbt_lleon.stg_tpch_orders where total_price < 0\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-09T18:00:52.367402Z", "completed_at": "2024-09-09T18:00:52.398458Z"}, {"name": "execute", "started_at": "2024-09-09T18:00:52.403528Z", "completed_at": "2024-09-09T18:00:53.765613Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 1.401371717453003, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01b6eb98-0905-598c-0004-7d8313957ad6"}, "message": "SUCCESS 1", "failures": null, "unique_id": "model.analytics.customer_flags", "compiled": true, "compiled_code": "\n\nwith customer as (\n\n    select * from analytics.dbt_lleon.stg_tpch_customers\n\n),\n\n    orders as (\n\n    select * from analytics.dbt_lleon.stg_tpch_orders\n\n),\n    \n    final as (\n\n    select\n    \n        customer.customer_key,\n        coalesce(sum(orders.total_price),0) as lifetime_value,\n        iff(lifetime_value > 3000000, 'Y', 'N') as is_high_value,\n        iff(lifetime_value between 1000000 and 2999999, 'Y', 'N') as is_mid_value,\n        iff(lifetime_value between 0 and 999999, 'Y','N') as is_low_value\n\n    from customer\n        inner join orders\n            on customer.customer_key = orders.customer_key\n    group by 1\n)\n\nselect * from final", "relation_name": "analytics.dbt_lleon.customer_flags"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-09T18:00:52.371248Z", "completed_at": "2024-09-09T18:00:52.398907Z"}, {"name": "execute", "started_at": "2024-09-09T18:00:52.411036Z", "completed_at": "2024-09-09T18:00:53.778344Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 1.4130706787109375, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01b6eb98-0905-598c-0004-7d8313957ada"}, "message": "SUCCESS 1", "failures": null, "unique_id": "model.analytics.order_items", "compiled": true, "compiled_code": "with orders as (\n    \n    select * from analytics.dbt_lleon.stg_tpch_orders\n\n),\n\nline_item as (\n\n    select * from analytics.dbt_lleon.stg_tpch_line_items\n\n)\nselect \n\n    line_item.order_item_key,\n    orders.order_key,\n    orders.customer_key,\n    line_item.part_key,\n    line_item.supplier_key,\n    orders.order_date,\n    orders.status_code as order_status_code,\n    \n    \n    line_item.is_return,\n    \n    line_item.line_number,\n    line_item.status_code as order_item_status_code,\n    line_item.ship_date,\n    line_item.commit_date,\n    line_item.receipt_date,\n    line_item.ship_mode,\n    line_item.extended_price,\n    line_item.quantity,\n    \n    -- extended_price is actually the line item total,\n    -- so we back out the extended price per item\n    (line_item.extended_price/nullif(line_item.quantity, 0))::decimal(16,3) as base_price,\n    line_item.discount_percentage,\n    (base_price * (1 - line_item.discount_percentage))::decimal(16,3) as discounted_price,\n\n    line_item.extended_price as gross_item_sales_amount,\n    (line_item.extended_price * (1 - line_item.discount_percentage))::decimal(16,3) as discounted_item_sales_amount,\n    -- We model discounts as negative amounts\n    (-1 * line_item.extended_price * line_item.discount_percentage)::decimal(16,3) as item_discount_amount,\n    line_item.tax_rate,\n    ((gross_item_sales_amount + item_discount_amount) * line_item.tax_rate)::decimal(16,3) as item_tax_amount,\n    (\n        gross_item_sales_amount + \n        item_discount_amount + \n        item_tax_amount\n    )::decimal(16,3) as net_item_sales_amount\n\nfrom\n    orders\ninner join line_item\n        on orders.order_key = line_item.order_key\norder by\n    orders.order_date", "relation_name": "analytics.dbt_lleon.order_items"}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2024-09-09T18:00:52.370784Z", "completed_at": "2024-09-09T18:00:52.370789Z"}, {"name": "execute", "started_at": "2024-09-09T18:00:52.375242Z", "completed_at": "2024-09-09T18:00:54.026728Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 1.6620147228240967, "adapter_response": {"_message": "SUCCESS 8", "code": "SUCCESS", "rows_affected": 8, "query_id": "01b6eb98-0905-5985-0004-7d8313956d26"}, "message": null, "failures": 0, "unique_id": "unit_test.analytics.customer_tier.tiers_are_working", "compiled": true, "compiled_code": "\n\nwith  __dbt__cte__stg_tpch_customers as (\n\n-- Fixture for stg_tpch_customers\nselect \n    \n        try_cast('629' as NUMBER(38,0))\n     as customer_key, try_cast(null as character varying(25)) as name, try_cast(null as character varying(40)) as address, try_cast(null as NUMBER(38,0)) as nation_key, try_cast(null as character varying(15)) as phone_number, try_cast(null as NUMBER(38,0)) as account_balance, try_cast(null as character varying(10)) as market_segment, try_cast(null as character varying(117)) as comment\nunion all\nselect \n    \n        try_cast('4' as NUMBER(38,0))\n     as customer_key, try_cast(null as character varying(25)) as name, try_cast(null as character varying(40)) as address, try_cast(null as NUMBER(38,0)) as nation_key, try_cast(null as character varying(15)) as phone_number, try_cast(null as NUMBER(38,0)) as account_balance, try_cast(null as character varying(10)) as market_segment, try_cast(null as character varying(117)) as comment\nunion all\nselect \n    \n        try_cast('1' as NUMBER(38,0))\n     as customer_key, try_cast(null as character varying(25)) as name, try_cast(null as character varying(40)) as address, try_cast(null as NUMBER(38,0)) as nation_key, try_cast(null as character varying(15)) as phone_number, try_cast(null as NUMBER(38,0)) as account_balance, try_cast(null as character varying(10)) as market_segment, try_cast(null as character varying(117)) as comment\nunion all\nselect \n    \n        try_cast('26' as NUMBER(38,0))\n     as customer_key, try_cast(null as character varying(25)) as name, try_cast(null as character varying(40)) as address, try_cast(null as NUMBER(38,0)) as nation_key, try_cast(null as character varying(15)) as phone_number, try_cast(null as NUMBER(38,0)) as account_balance, try_cast(null as character varying(10)) as market_segment, try_cast(null as character varying(117)) as comment\n),  __dbt__cte__stg_tpch_orders as (\n\n-- Fixture for stg_tpch_orders\nselect try_cast(null as NUMBER(38,0)) as order_key, \n    \n        try_cast('629' as NUMBER(38,0))\n     as customer_key, try_cast(null as character varying(1)) as status_code, \n    \n        try_cast('163443' as NUMBER(38,0))\n     as total_price, try_cast(null as DATE) as order_date, try_cast(null as character varying(15)) as priority_code, try_cast(null as character varying(15)) as clerk_name, try_cast(null as NUMBER(38,0)) as ship_priority, try_cast(null as character varying(79)) as comment\nunion all\nselect try_cast(null as NUMBER(38,0)) as order_key, \n    \n        try_cast('4' as NUMBER(38,0))\n     as customer_key, try_cast(null as character varying(1)) as status_code, \n    \n        try_cast('4134568' as NUMBER(38,0))\n     as total_price, try_cast(null as DATE) as order_date, try_cast(null as character varying(15)) as priority_code, try_cast(null as character varying(15)) as clerk_name, try_cast(null as NUMBER(38,0)) as ship_priority, try_cast(null as character varying(79)) as comment\nunion all\nselect try_cast(null as NUMBER(38,0)) as order_key, \n    \n        try_cast('1' as NUMBER(38,0))\n     as customer_key, try_cast(null as character varying(1)) as status_code, \n    \n        try_cast('1428872' as NUMBER(38,0))\n     as total_price, try_cast(null as DATE) as order_date, try_cast(null as character varying(15)) as priority_code, try_cast(null as character varying(15)) as clerk_name, try_cast(null as NUMBER(38,0)) as ship_priority, try_cast(null as character varying(79)) as comment\nunion all\nselect try_cast(null as NUMBER(38,0)) as order_key, \n    \n        try_cast('26' as NUMBER(38,0))\n     as customer_key, try_cast(null as character varying(1)) as status_code, \n    \n        try_cast('418512' as NUMBER(38,0))\n     as total_price, try_cast(null as DATE) as order_date, try_cast(null as character varying(15)) as priority_code, try_cast(null as character varying(15)) as clerk_name, try_cast(null as NUMBER(38,0)) as ship_priority, try_cast(null as character varying(79)) as comment\n), customer as (\n    select * from __dbt__cte__stg_tpch_customers\n),\n\norders as (\n    select * from __dbt__cte__stg_tpch_orders\n),\nfinal as (\n    select\n        customer.customer_key,\n        sum(orders.total_price) as lifetime_value,\n        case \n            when lifetime_value <= 200000 then 'tier1'\n            when lifetime_value > 2000000 then 'tier2'\n            when lifetime_value between 1000000 and 1999999 then 'tier3'\n            when lifetime_value between 0 and 999999 then 'tier4' \n        end as tier_name\n    from customer\n        inner join orders\n            on customer.customer_key = orders.customer_key\n    group by 1\n)\n\nselect * from final", "relation_name": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2024-09-09T18:00:53.788190Z", "completed_at": "2024-09-09T18:00:53.800214Z"}, {"name": "execute", "started_at": "2024-09-09T18:00:53.800717Z", "completed_at": "2024-09-09T18:00:54.394185Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.6081287860870361, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01b6eb98-0905-5985-0004-7d8313956d46"}, "message": null, "failures": 0, "unique_id": "test.analytics.not_null_order_items_order_item_key.44b9fa7311", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect order_item_key\nfrom analytics.dbt_lleon.order_items\nwhere order_item_key is null\n\n\n", "relation_name": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2024-09-09T18:00:53.794362Z", "completed_at": "2024-09-09T18:00:53.801917Z"}, {"name": "execute", "started_at": "2024-09-09T18:00:53.802811Z", "completed_at": "2024-09-09T18:00:54.455728Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.6691169738769531, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01b6eb98-0905-5985-0004-7d8313956d4a"}, "message": null, "failures": 0, "unique_id": "test.analytics.unique_order_items_order_item_key.43a40b2837", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    order_item_key as unique_field,\n    count(*) as n_records\n\nfrom analytics.dbt_lleon.order_items\nwhere order_item_key is not null\ngroup by order_item_key\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-09T18:00:54.030074Z", "completed_at": "2024-09-09T18:00:54.035154Z"}, {"name": "execute", "started_at": "2024-09-09T18:00:54.048129Z", "completed_at": "2024-09-09T18:00:54.985411Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.9562366008758545, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01b6eb98-0905-5985-0004-7d8313956d5a"}, "message": "SUCCESS 1", "failures": null, "unique_id": "model.analytics.customer_tier", "compiled": true, "compiled_code": "\n\nwith customer as (\n    select * from analytics.dbt_lleon.stg_tpch_customers\n),\n\norders as (\n    select * from analytics.dbt_lleon.stg_tpch_orders\n),\nfinal as (\n    select\n        customer.customer_key,\n        sum(orders.total_price) as lifetime_value,\n        case \n            when lifetime_value <= 200000 then 'tier1'\n            when lifetime_value > 2000000 then 'tier2'\n            when lifetime_value between 1000000 and 1999999 then 'tier3'\n            when lifetime_value between 0 and 999999 then 'tier4' \n        end as tier_name\n    from customer\n        inner join orders\n            on customer.customer_key = orders.customer_key\n    group by 1\n)\n\nselect * from final", "relation_name": "analytics.dbt_lleon.customer_tier"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-09T18:00:53.769405Z", "completed_at": "2024-09-09T18:00:53.779006Z"}, {"name": "execute", "started_at": "2024-09-09T18:00:53.779468Z", "completed_at": "2024-09-09T18:00:55.339905Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 1.571427822113037, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01b6eb98-0905-5985-0004-7d8313956d6a"}, "message": "SUCCESS 1", "failures": null, "unique_id": "model.analytics.dim_customers.v2", "compiled": true, "compiled_code": "\n\nwith customer as (\n\n    select * from analytics.dbt_lleon.stg_tpch_customers\n\n),\nnation as (\n\n    select * from analytics.dbt_lleon.stg_tpch_nations\n),\nregion as (\n\n    select * from analytics.dbt_lleon.stg_tpch_regions\n\n),\ncustomer_flags as (\n    select * from analytics.dbt_lleon.customer_flags\n),\n\nfinal as (\n    select \n        customer.customer_key,\n        customer.name,\n        customer.address,\n        --- Break the contract \n        -- nation.nation_key as nation_key, \n        nation.name as nation,\n        --- Break the contract again\n        -- region.region_key as region_key,\n        region.name as region,\n        customer.phone_number,\n        customer.account_balance,\n        customer.market_segment,\n        customer_flags.lifetime_value,\n        customer_flags.is_high_value,\n        customer_flags.is_mid_value,\n        customer_flags.is_low_value\n    from\n        customer\n        inner join nation\n            on customer.nation_key = nation.nation_key\n        inner join region\n            on nation.region_key = region.region_key\n        left join customer_flags\n            on customer.customer_key = customer_flags.customer_key\n)\nselect \n    *\nfrom\n    final\norder by\n    customer_key", "relation_name": "analytics.dbt_lleon.dim_customers_v2"}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2024-09-09T18:00:54.988869Z", "completed_at": "2024-09-09T18:00:54.995476Z"}, {"name": "execute", "started_at": "2024-09-09T18:00:54.995882Z", "completed_at": "2024-09-09T18:00:55.432977Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.4450664520263672, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01b6eb98-0905-598c-0004-7d8313957b56"}, "message": null, "failures": 0, "unique_id": "test.analytics.unique_customer_tier_customer_key.da86382e26", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    customer_key as unique_field,\n    count(*) as n_records\n\nfrom analytics.dbt_lleon.customer_tier\nwhere customer_key is not null\ngroup by customer_key\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2024-09-09T18:00:55.343633Z", "completed_at": "2024-09-09T18:00:55.350474Z"}, {"name": "execute", "started_at": "2024-09-09T18:00:55.350906Z", "completed_at": "2024-09-09T18:00:55.888366Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.5458049774169922, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01b6eb98-0905-598c-0004-7d8313957b6a"}, "message": null, "failures": 0, "unique_id": "test.analytics.accepted_values_dim_customers_v2_region__AFRICA__MIDDLE_EAST__ASIA__EUROPE__AMERICA.7ae788b269", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        region as value_field,\n        count(*) as n_records\n\n    from analytics.dbt_lleon.dim_customers_v2\n    group by region\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'AFRICA','MIDDLE EAST','ASIA','EUROPE','AMERICA'\n)\n\n\n", "relation_name": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2024-09-09T18:00:55.436493Z", "completed_at": "2024-09-09T18:00:55.442856Z"}, {"name": "execute", "started_at": "2024-09-09T18:00:55.443261Z", "completed_at": "2024-09-09T18:00:56.013183Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.577688455581665, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01b6eb98-0905-5985-0004-7d8313956dba"}, "message": null, "failures": 0, "unique_id": "test.analytics.not_null_dim_customers_v2_customer_key.f3eeb01e0a", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect customer_key\nfrom analytics.dbt_lleon.dim_customers_v2\nwhere customer_key is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-09T18:00:54.465116Z", "completed_at": "2024-09-09T18:00:54.470736Z"}, {"name": "execute", "started_at": "2024-09-09T18:00:54.471579Z", "completed_at": "2024-09-09T18:00:56.218886Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 1.7589893341064453, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01b6eb98-0905-5985-0004-7d8313956d86"}, "message": "SUCCESS 1", "failures": null, "unique_id": "model.analytics.fct_orders", "compiled": true, "compiled_code": "\n\nwith orders as (\n    \n    select * from analytics.dbt_lleon.stg_tpch_orders \n\n),\norder_item as (\n    \n    select * from analytics.dbt_lleon.order_items\n\n),\norder_item_summary as (\n\n    select \n        order_key,\n        sum(gross_item_sales_amount) as gross_item_sales_amount,\n        sum(item_discount_amount) as item_discount_amount,\n        sum(item_tax_amount) as item_tax_amount,\n        sum(net_item_sales_amount) as net_item_sales_amount,\n        count_if( is_return = true ) as return_count\n    from order_item\n    group by\n        1\n),\nfinal as (\n\n    select \n\n        orders.order_key, \n        orders.order_date,\n        orders.customer_key,\n        orders.status_code,\n        orders.priority_code,\n        orders.clerk_name,\n        orders.ship_priority,     \n        1 as order_count,\n        order_item_summary.return_count,             \n        order_item_summary.gross_item_sales_amount,\n        order_item_summary.item_discount_amount,\n        order_item_summary.item_tax_amount,\n        order_item_summary.net_item_sales_amount\n    from\n        orders\n        inner join order_item_summary\n            on orders.order_key = order_item_summary.order_key\n)\nselect \n    *\nfrom\n    final\n\norder by\n    order_date", "relation_name": "analytics.dbt_lleon.fct_orders"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-09T18:00:56.222082Z", "completed_at": "2024-09-09T18:00:56.222084Z"}, {"name": "execute", "started_at": "2024-09-09T18:00:56.222439Z", "completed_at": "2024-09-09T18:00:56.222857Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.0016109943389892578, "adapter_response": {}, "message": "NO-OP", "failures": null, "unique_id": "saved_query.analytics.metrics_cumulative_revenue_total", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2024-09-09T18:00:55.891576Z", "completed_at": "2024-09-09T18:00:55.898368Z"}, {"name": "execute", "started_at": "2024-09-09T18:00:55.898793Z", "completed_at": "2024-09-09T18:00:56.387140Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.49643468856811523, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01b6eb98-0905-5985-0004-7d8313956dda"}, "message": null, "failures": 0, "unique_id": "test.analytics.unique_dim_customers_v2_customer_key.6ef61552c6", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    customer_key as unique_field,\n    count(*) as n_records\n\nfrom analytics.dbt_lleon.dim_customers_v2\nwhere customer_key is not null\ngroup by customer_key\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-09T18:00:54.461250Z", "completed_at": "2024-09-09T18:00:54.468630Z"}, {"name": "execute", "started_at": "2024-09-09T18:00:54.469115Z", "completed_at": "2024-09-09T18:00:56.573830Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 2.1143808364868164, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01b6eb98-0905-598c-0004-7d8313957b2e"}, "message": "SUCCESS 1", "failures": null, "unique_id": "model.analytics.fct_order_items", "compiled": true, "compiled_code": "\n\nwith order_item as (\n    \n    select * from analytics.dbt_lleon.order_items\n\n),\npart_supplier as (\n    \n    select * from analytics.dbt_lleon.part_suppliers\n\n),\nfinal as (\n    select \n        order_item.order_item_key,\n        order_item.order_key,\n        order_item.order_date,\n        order_item.customer_key,\n        order_item.part_key,\n        order_item.supplier_key,\n        order_item.order_item_status_code,\n        order_item.is_return,\n        order_item.line_number,\n        order_item.ship_date,\n        order_item.commit_date,\n        order_item.receipt_date,\n        order_item.ship_mode,\n        part_supplier.cost as supplier_cost,\n        \n        order_item.base_price,\n        order_item.discount_percentage,\n        order_item.discounted_price,\n        order_item.tax_rate,\n        part_supplier.nation_key,\n        1 as order_item_count,\n        order_item.quantity,\n        order_item.gross_item_sales_amount,\n        order_item.discounted_item_sales_amount,\n        order_item.item_discount_amount,\n        order_item.item_tax_amount,\n        order_item.net_item_sales_amount\n\n    from\n        order_item\n        inner join part_supplier\n            on order_item.part_key = part_supplier.part_key and\n                order_item.supplier_key = part_supplier.supplier_key\n)\nselect \n    *\nfrom\n    final\norder by\n    order_date", "relation_name": "analytics.dbt_lleon.fct_order_items"}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2024-09-09T18:00:56.225599Z", "completed_at": "2024-09-09T18:00:56.232713Z"}, {"name": "execute", "started_at": "2024-09-09T18:00:56.233124Z", "completed_at": "2024-09-09T18:00:56.674240Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.4494912624359131, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01b6eb98-0905-598c-0004-7d8313957bba"}, "message": null, "failures": 0, "unique_id": "test.analytics.not_null_fct_orders_order_key.6a6f83ab15", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect order_key\nfrom analytics.dbt_lleon.fct_orders\nwhere order_key is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-09T18:00:56.677292Z", "completed_at": "2024-09-09T18:00:56.677295Z"}, {"name": "execute", "started_at": "2024-09-09T18:00:56.677660Z", "completed_at": "2024-09-09T18:00:56.678083Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.0020532608032226562, "adapter_response": {}, "message": "NO-OP", "failures": null, "unique_id": "saved_query.analytics.metrics_sales_by_region", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2024-09-09T18:00:56.390332Z", "completed_at": "2024-09-09T18:00:56.400479Z"}, {"name": "execute", "started_at": "2024-09-09T18:00:56.400900Z", "completed_at": "2024-09-09T18:00:56.957114Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.5676755905151367, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01b6eb98-0905-598c-0004-7d8313957bca"}, "message": null, "failures": 0, "unique_id": "test.analytics.relationships_fct_orders_customer_key__customer_key__ref_dim_customers_.018eb0a60b", "compiled": true, "compiled_code": "\n    \n    \n\nwith child as (\n    select customer_key as from_field\n    from analytics.dbt_lleon.fct_orders\n    where customer_key is not null\n),\n\nparent as (\n    select customer_key as to_field\n    from analytics.dbt_lleon.dim_customers_v2\n)\n\nselect\n    from_field\n\nfrom child\nleft join parent\n    on child.from_field = parent.to_field\n\nwhere parent.to_field is null\n\n\n", "relation_name": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2024-09-09T18:00:56.577256Z", "completed_at": "2024-09-09T18:00:56.583280Z"}, {"name": "execute", "started_at": "2024-09-09T18:00:56.583680Z", "completed_at": "2024-09-09T18:00:57.010181Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.4337646961212158, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01b6eb98-0905-5985-0004-7d8313956e0a"}, "message": null, "failures": 0, "unique_id": "test.analytics.unique_fct_orders_order_key.f5e7a90273", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    order_key as unique_field,\n    count(*) as n_records\n\nfrom analytics.dbt_lleon.fct_orders\nwhere order_key is not null\ngroup by order_key\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2024-09-09T18:00:56.684318Z", "completed_at": "2024-09-09T18:00:56.696339Z"}, {"name": "execute", "started_at": "2024-09-09T18:00:56.698056Z", "completed_at": "2024-09-09T18:00:57.114923Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.4348158836364746, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01b6eb98-0905-5985-0004-7d8313956e0e"}, "message": null, "failures": 0, "unique_id": "test.analytics.not_null_fct_order_items_nation_key.c3faf47d8e", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect nation_key\nfrom analytics.dbt_lleon.fct_order_items\nwhere nation_key is null\n\n\n", "relation_name": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2024-09-09T18:00:56.960340Z", "completed_at": "2024-09-09T18:00:56.966758Z"}, {"name": "execute", "started_at": "2024-09-09T18:00:56.967207Z", "completed_at": "2024-09-09T18:00:57.396010Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.43654704093933105, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01b6eb98-0905-5985-0004-7d8313956e1e"}, "message": null, "failures": 0, "unique_id": "test.analytics.not_null_fct_order_items_order_item_key.47516a6371", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect order_item_key\nfrom analytics.dbt_lleon.fct_order_items\nwhere order_item_key is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-09T18:00:56.017086Z", "completed_at": "2024-09-09T18:00:56.023312Z"}, {"name": "execute", "started_at": "2024-09-09T18:00:56.023737Z", "completed_at": "2024-09-09T18:00:57.515038Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 1.4990310668945312, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01b6eb98-0905-598c-0004-7d8313957bbe"}, "message": "SUCCESS 1", "failures": null, "unique_id": "model.analytics.dim_customers.v1", "compiled": true, "compiled_code": "\n\nwith customer as (\n\n    select * from analytics.dbt_lleon.stg_tpch_customers\n\n),\nnation as (\n\n    select * from analytics.dbt_lleon.stg_tpch_nations\n),\nregion as (\n\n    select * from analytics.dbt_lleon.stg_tpch_regions\n\n),\ncustomer_tier as (\n  \n    select * from analytics.dbt_lleon.customer_tier\n\n),\nfinal as (\n    select \n        customer.customer_key,\n        customer.name,\n        customer.address,\n        \n        nation.name as nation,\n        \n        region.name as region,\n        customer.phone_number,\n        customer.account_balance,\n        customer.market_segment,\n        customer_tier.lifetime_value,\n        customer_tier.tier_name\n    from\n        customer\n        inner join nation\n            on customer.nation_key = nation.nation_key\n        inner join region\n            on nation.region_key = region.region_key\n        left join customer_tier\n            on customer.customer_key = customer_tier.customer_key\n)\nselect \n    *\nfrom\n    final\norder by\n    customer_key", "relation_name": "analytics.dbt_lleon.dim_customers_v1"}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2024-09-09T18:00:57.013648Z", "completed_at": "2024-09-09T18:00:57.024871Z"}, {"name": "execute", "started_at": "2024-09-09T18:00:57.025365Z", "completed_at": "2024-09-09T18:00:57.610324Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.5977885723114014, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01b6eb98-0905-598c-0004-7d8313957bf2"}, "message": null, "failures": 0, "unique_id": "test.analytics.orders_sales_amount_equals_order_item_sales_amount.a260da713f", "compiled": true, "compiled_code": "\n    with a as (\n        \n    select\n        \n        order_key as col_1,\n        \n        sum(net_item_sales_amount) as expression\n    from\n        analytics.dbt_lleon.fct_order_items\n    \n    group by\n        1\n        \n    \n\n    ),\n    b as (\n        \n    select\n        \n        order_key as col_1,\n        \n        sum(net_item_sales_amount) as expression\n    from\n        analytics.dbt_lleon.fct_orders\n    \n    group by\n        1\n        \n    \n\n    ),\n    final as (\n\n        select\n            coalesce(a.col_1, b.col_1) as col_1,\n            \n            a.expression,\n            b.expression as compare_expression,\n            abs(coalesce(a.expression, 0) - coalesce(b.expression, 0)) as expression_difference,\n            abs(coalesce(a.expression, 0) - coalesce(b.expression, 0))/\n                nullif(a.expression * 1.0, 0) as expression_difference_percent\n        from\n        \n            a\n            full outer join\n            b on\n            a.col_1 = b.col_1 \n            \n    )\n    -- DEBUG:\n    -- select * from final\n    select\n        *\n    from final\n    where\n        \n        expression_difference > 0.0\n        ", "relation_name": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2024-09-09T18:00:57.119018Z", "completed_at": "2024-09-09T18:00:57.126247Z"}, {"name": "execute", "started_at": "2024-09-09T18:00:57.126762Z", "completed_at": "2024-09-09T18:00:57.613585Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.49553561210632324, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01b6eb98-0905-598c-0004-7d8313957bf6"}, "message": null, "failures": 0, "unique_id": "test.analytics.unique_fct_order_items_order_item_key.4d6426a255", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    order_item_key as unique_field,\n    count(*) as n_records\n\nfrom analytics.dbt_lleon.fct_order_items\nwhere order_item_key is not null\ngroup by order_item_key\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2024-09-09T18:00:57.520582Z", "completed_at": "2024-09-09T18:00:57.532994Z"}, {"name": "execute", "started_at": "2024-09-09T18:00:57.533462Z", "completed_at": "2024-09-09T18:00:58.011377Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.49262166023254395, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01b6eb98-0905-598c-0004-7d8313957c3e"}, "message": null, "failures": 0, "unique_id": "test.analytics.accepted_values_dim_customers_v1_region__AFRICA__MIDDLE_EAST__ASIA__EUROPE__AMERICA.f7bdfd165a", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        region as value_field,\n        count(*) as n_records\n\n    from analytics.dbt_lleon.dim_customers_v1\n    group by region\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'AFRICA','MIDDLE EAST','ASIA','EUROPE','AMERICA'\n)\n\n\n", "relation_name": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2024-09-09T18:00:57.527240Z", "completed_at": "2024-09-09T18:00:57.534734Z"}, {"name": "execute", "started_at": "2024-09-09T18:00:57.535588Z", "completed_at": "2024-09-09T18:00:58.037316Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.5181088447570801, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01b6eb98-0905-5985-0004-7d8313956e5a"}, "message": null, "failures": 0, "unique_id": "test.analytics.not_null_dim_customers_v1_customer_key.e87078db40", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect customer_key\nfrom analytics.dbt_lleon.dim_customers_v1\nwhere customer_key is null\n\n\n", "relation_name": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2024-09-09T18:00:57.618184Z", "completed_at": "2024-09-09T18:00:57.625595Z"}, {"name": "execute", "started_at": "2024-09-09T18:00:57.628113Z", "completed_at": "2024-09-09T18:00:58.059804Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.4431600570678711, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01b6eb98-0905-5985-0004-7d8313956e5e"}, "message": null, "failures": 0, "unique_id": "test.analytics.unique_dim_customers_v1_customer_key.3be86f0867", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    customer_key as unique_field,\n    count(*) as n_records\n\nfrom analytics.dbt_lleon.dim_customers_v1\nwhere customer_key is not null\ngroup by customer_key\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-09T18:00:57.626026Z", "completed_at": "2024-09-09T18:00:57.630533Z"}, {"name": "execute", "started_at": "2024-09-09T18:00:57.631200Z", "completed_at": "2024-09-09T18:00:58.124797Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.5000834465026855, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01b6eb98-0905-5985-0004-7d8313956e66"}, "message": "SUCCESS 1", "failures": null, "unique_id": "model.analytics.agg_daily_returned_orders", "compiled": true, "compiled_code": "with fct_order_items as (\n    select * from analytics.dbt_lleon.fct_order_items\n),\n\nfinal as (\n    select\n        fct_order_items.order_date as ds\n        , cast(1.0*count(case when is_return then order_item_key else null end) as float) as y\n    from fct_order_items\n    group by 1\n    order by 1 desc\n)\n\nselect * from final", "relation_name": "analytics.dbt_lleon.agg_daily_returned_orders"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-09T18:00:58.014650Z", "completed_at": "2024-09-09T18:00:58.017628Z"}, {"name": "execute", "started_at": "2024-09-09T18:00:58.018049Z", "completed_at": "2024-09-09T18:00:58.697111Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.6833250522613525, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01b6eb98-0905-5985-0004-7d8313956e8e"}, "message": "SUCCESS 1", "failures": null, "unique_id": "model.analytics.agg_returned_orders_by_month", "compiled": true, "compiled_code": "with fct_order_items as (\n    select * from analytics.dbt_lleon.fct_order_items\n),\n\nfinal as (\n    select\n        date_trunc(MONTH, fct_order_items.order_date) as order_month \n        , count(case when is_return then order_item_key else null end) as returned_orders\n        , 1.0* returned_orders / nullif (\n            count(order_item_key)\n            , 0\n        ) as return_rate\n        , count(*) as row_count\n    from fct_order_items\n    group by 1\n    order by 1 desc\n)\n\nselect * from final", "relation_name": "analytics.dbt_lleon.agg_returned_orders_by_month"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-09T18:00:58.128634Z", "completed_at": "2024-09-09T18:00:58.134039Z"}, {"name": "execute", "started_at": "2024-09-09T18:00:58.134966Z", "completed_at": "2024-09-09T18:00:58.819526Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.6921308040618896, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01b6eb98-0905-598c-0004-7d8313957c7a"}, "message": "SUCCESS 1", "failures": null, "unique_id": "model.analytics.monthly_gross_revenue", "compiled": true, "compiled_code": "select \n    date_trunc(MONTH, fct_order_items.order_date) as order_month\n    , sum(fct_order_items.gross_item_sales_amount) as gross_revenue\nfrom analytics.dbt_lleon.fct_order_items\ngroup by 1", "relation_name": "analytics.dbt_lleon.monthly_gross_revenue"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-09T18:00:58.063136Z", "completed_at": "2024-09-09T18:00:58.065619Z"}, {"name": "execute", "started_at": "2024-09-09T18:00:58.066013Z", "completed_at": "2024-09-09T18:00:58.911133Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.8488967418670654, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01b6eb98-0905-598c-0004-7d8313957c72"}, "message": "SUCCESS 1", "failures": null, "unique_id": "model.analytics.agg_ship_modes_hardcoded_pivot", "compiled": true, "compiled_code": "/* Create a pivot table with hard-coded columns based on a query of the ship modes that are in the system */\n\nwith merged as (\n    select\n        date_part('year', order_date) as order_year,\n        ship_mode,\n        gross_item_sales_amount\n    from analytics.dbt_lleon.fct_order_items\n)\n\nselect\n    * \nfrom\n    merged\n    -- have to manually map strings in the pivot operation\n    pivot(sum(gross_item_sales_amount) for ship_mode in (\n        'AIR',\n        'REG AIR',\n        'FOB',\n        'RAIL',\n        'MAIL',\n        'SHIP',\n        'TRUCK'\n    )) as p \n\norder by order_year", "relation_name": "analytics.dbt_lleon.agg_ship_modes_hardcoded_pivot"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-09T18:00:58.040892Z", "completed_at": "2024-09-09T18:00:58.184817Z"}, {"name": "execute", "started_at": "2024-09-09T18:00:58.185249Z", "completed_at": "2024-09-09T18:00:58.982306Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.9423956871032715, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01b6eb98-0905-598c-0004-7d8313957c82"}, "message": "SUCCESS 1", "failures": null, "unique_id": "model.analytics.agg_ship_modes_dynamic_pivot", "compiled": true, "compiled_code": "/* Create a pivot table with dynamic columns based on the ship modes that are in the system */\n\n\n\nselect\n    date_part('year', order_date) as order_year,\n\n    sum(case when ship_mode = 'REG AIR' then gross_item_sales_amount end) as \"REG_AIR_amount\",\n    sum(case when ship_mode = 'RAIL' then gross_item_sales_amount end) as \"RAIL_amount\",\n    sum(case when ship_mode = 'SHIP' then gross_item_sales_amount end) as \"SHIP_amount\",\n    sum(case when ship_mode = 'MAIL' then gross_item_sales_amount end) as \"MAIL_amount\",\n    sum(case when ship_mode = 'FOB' then gross_item_sales_amount end) as \"FOB_amount\",\n    sum(case when ship_mode = 'TRUCK' then gross_item_sales_amount end) as \"TRUCK_amount\",\n    sum(case when ship_mode = 'AIR' then gross_item_sales_amount end) as \"AIR_amount\"\n    \n\nfrom analytics.dbt_lleon.fct_order_items\ngroup by 1", "relation_name": "analytics.dbt_lleon.agg_ship_modes_dynamic_pivot"}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2024-09-09T18:00:58.985615Z", "completed_at": "2024-09-09T18:00:58.994135Z"}, {"name": "execute", "started_at": "2024-09-09T18:00:58.994582Z", "completed_at": "2024-09-09T18:00:59.397448Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.41271066665649414, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01b6eb98-0905-5985-0004-7d8313956eca"}, "message": null, "failures": 0, "unique_id": "test.analytics.unique_monthly_gross_revenue_order_month.2b4d4215f7", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    order_month as unique_field,\n    count(*) as n_records\n\nfrom analytics.dbt_lleon.monthly_gross_revenue\nwhere order_month is not null\ngroup by order_month\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "warn", "timing": [{"name": "compile", "started_at": "2024-09-09T18:00:58.914400Z", "completed_at": "2024-09-09T18:00:58.917070Z"}, {"name": "execute", "started_at": "2024-09-09T18:00:58.917495Z", "completed_at": "2024-09-09T18:00:59.474972Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.5614428520202637, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01b6eb98-0905-5985-0004-7d8313956ec6"}, "message": "Got 1 result, configured to warn if != 0", "failures": 1, "unique_id": "test.analytics.agg_returned_orders_by_month_threshold", "compiled": true, "compiled_code": "\n\nwith agg_returned_orders_by_month as ( select * from analytics.dbt_lleon.agg_returned_orders_by_month )\n\nselect *\nfrom agg_returned_orders_by_month\nwhere order_month = (select max(order_month) from agg_returned_orders_by_month)\nand return_rate > 0.60", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-09T18:00:58.700851Z", "completed_at": "2024-09-09T18:00:58.705517Z"}, {"name": "execute", "started_at": "2024-09-09T18:00:58.706080Z", "completed_at": "2024-09-09T18:00:59.989021Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 1.2891075611114502, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01b6eb98-0905-598c-0004-7d8313957c96"}, "message": "SUCCESS 1", "failures": null, "unique_id": "model.analytics.use_variables", "compiled": true, "compiled_code": "-- This is here to show that data older than start_date exists - run this first\n-- select min(order_date) from analytics.dbt_lleon.fct_order_items\n\n-- start_date is defined in the dbt_project.yml \n-- to illustrate overriding variables from the command line, run dbt run -m use_variables --vars '{\"start_date\": \"1996-01-01\"}'\nselect * from analytics.dbt_lleon.fct_order_items where order_date >= '1999-01-01'", "relation_name": "analytics.dbt_lleon.use_variables"}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2024-09-09T18:00:59.994759Z", "completed_at": "2024-09-09T18:01:00.007638Z"}, {"name": "execute", "started_at": "2024-09-09T18:01:00.008149Z", "completed_at": "2024-09-09T18:01:00.448825Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.455904483795166, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01b6eb99-0905-598c-0004-7d8313957cf2"}, "message": null, "failures": 0, "unique_id": "test.analytics.not_null_use_variables_order_item_key.c2bd602686", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect order_item_key\nfrom analytics.dbt_lleon.use_variables\nwhere order_item_key is null\n\n\n", "relation_name": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2024-09-09T18:01:00.001333Z", "completed_at": "2024-09-09T18:01:00.010021Z"}, {"name": "execute", "started_at": "2024-09-09T18:01:00.011303Z", "completed_at": "2024-09-09T18:01:00.494853Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.501441240310669, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01b6eb99-0905-598c-0004-7d8313957cea"}, "message": null, "failures": 0, "unique_id": "test.analytics.unique_use_variables_order_item_key.fb5576fe0e", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    order_item_key as unique_field,\n    count(*) as n_records\n\nfrom analytics.dbt_lleon.use_variables\nwhere order_item_key is not null\ngroup by order_item_key\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-09T18:00:58.823261Z", "completed_at": "2024-09-09T18:00:58.846200Z"}, {"name": "execute", "started_at": "2024-09-09T18:00:58.847388Z", "completed_at": "2024-09-09T18:01:15.190700Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 16.36839509010315, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01b6eb98-0905-5985-0004-7d8313956eba"}, "message": "SUCCESS 1", "failures": null, "unique_id": "model.analytics.forecast_daily_returns", "compiled": true, "compiled_code": "import pandas as pd # import packages\nfrom prophet import Prophet\n\ndef model( dbt, session ):\n    \n    dbt.config(\n        materialized=\"table\", # the incremental materialization is also supported\n        packages=['pandas==1.5.3','Prophet','holidays==0.18'] # how to import python libraries in dbt's context\n    )\n\n    # use historical data to fit model\n    df = dbt.ref(\"agg_daily_returned_orders\").to_pandas() # use dbt.ref to reference other models in your dbt project\n    df.columns = df.columns.str.lower()\n    m = Prophet()\n    m.fit(df)\n    \n    # forecast returns and output dataframe\n    future = m.make_future_dataframe(periods=365)\n    df = m.predict(future)\n    \n    return df # return final dataset via data frame. This is required. \n\n# The Preview button in the IDE is disabled, but you can iterate by building the object and then opening a new tab and running... select * from ref('forecast_daily_returns')\n# Tests and Documentation can also be applied to python models, in the same manner as sql models (.yml file or custom tests).\n\n\n# This part is user provided model code\n# you will need to copy the next section to run the code\n# COMMAND ----------\n# this part is dbt logic for get ref work, do not modify\n\ndef ref(*args, **kwargs):\n    refs = {\"agg_daily_returned_orders\": \"analytics.dbt_lleon.agg_daily_returned_orders\"}\n    key = '.'.join(args)\n    version = kwargs.get(\"v\") or kwargs.get(\"version\")\n    if version:\n        key += f\".v{version}\"\n    dbt_load_df_function = kwargs.get(\"dbt_load_df_function\")\n    return dbt_load_df_function(refs[key])\n\n\ndef source(*args, dbt_load_df_function):\n    sources = {}\n    key = '.'.join(args)\n    return dbt_load_df_function(sources[key])\n\n\nconfig_dict = {}\n\n\nclass config:\n    def __init__(self, *args, **kwargs):\n        pass\n\n    @staticmethod\n    def get(key, default=None):\n        return config_dict.get(key, default)\n\nclass this:\n    \"\"\"dbt.this() or dbt.this.identifier\"\"\"\n    database = \"analytics\"\n    schema = \"dbt_lleon\"\n    identifier = \"forecast_daily_returns\"\n    \n    def __repr__(self):\n        return 'analytics.dbt_lleon.forecast_daily_returns'\n\n\nclass dbtObj:\n    def __init__(self, load_df_function) -> None:\n        self.source = lambda *args: source(*args, dbt_load_df_function=load_df_function)\n        self.ref = lambda *args, **kwargs: ref(*args, **kwargs, dbt_load_df_function=load_df_function)\n        self.config = config\n        self.this = this()\n        self.is_incremental = False\n\n# COMMAND ----------\n\n# To run this in snowsight, you need to select entry point to be main\n# And you may have to modify the return type to text to get the result back\n# def main(session):\n#     dbt = dbtObj(session.table)\n#     df = model(dbt, session)\n#     return df.collect()\n\n# to run this in local notebook, you need to create a session following examples https://github.com/Snowflake-Labs/sfguide-getting-started-snowpark-python\n# then you can do the following to run model\n# dbt = dbtObj(session.table)\n# df = model(dbt, session)\n\n", "relation_name": "analytics.dbt_lleon.forecast_daily_returns"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-09T18:01:15.194704Z", "completed_at": "2024-09-09T18:01:15.198082Z"}, {"name": "execute", "started_at": "2024-09-09T18:01:15.198498Z", "completed_at": "2024-09-09T18:01:15.888791Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.6950078010559082, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01b6eb99-0905-598c-0004-7d8313957e7a"}, "message": "SUCCESS 1", "failures": null, "unique_id": "model.analytics.actual_and_forecasted_returns", "compiled": true, "compiled_code": "with agg_daily_returned_orders as (\n    select * from analytics.dbt_lleon.agg_daily_returned_orders\n),\n\nforecast_daily_returns as (\n    select * from analytics.dbt_lleon.forecast_daily_returns\n),\n\nfinal as (\n    select \n        \"DS\" as relevant_date, \n        \"Y\" as returned_orders, \n        false as is_forecast,\n        null as lower_bound,\n        null as upper_bound\n    from agg_daily_returned_orders\n\n    union all \n\n    select \n        cast(to_timestamp_ntz(\"ds\"::varchar) as date) as relevant_date, \n        \"yhat\" as returned_orders, \n        true as is_forecast,\n        \"yhat_lower\" as lower_bound,\n        \"yhat_upper\" as upper_bound \n    from forecast_daily_returns\n    where relevant_date > (select max(\"DS\") from agg_daily_returned_orders)\n)\n\nselect * from final", "relation_name": "analytics.dbt_lleon.actual_and_forecasted_returns"}], "elapsed_time": 30.557368278503418, "args": {"log_level_file": "debug", "export_saved_queries": false, "resource_types": [], "strict_mode": false, "profiles_dir": "./", "cache_selected_only": false, "include_saved_query": false, "vars": {}, "state": "__state", "use_colors": true, "partial_parse_file_diff": true, "target_path": "target", "version_check": true, "partial_parse": true, "exclude": [], "print": true, "source_freshness_run_project_hooks": false, "write_json": true, "introspect": true, "defer": true, "show_resource_report": false, "use_colors_file": true, "invocation_command": "dbt ", "require_explicit_package_overrides_for_builtin_materializations": true, "log_level": "info", "log_path": "logs", "show": false, "project_dir": "/app/dbt_project/e967041e-1be8-4504-8a3d-624e1089a177", "macro_debugging": false, "which": "build", "log_format_file": "json", "empty": false, "favor_state": false, "printer_width": 80, "static_parser": true, "quiet": false, "select": ["stg_tpch_orders+"], "warn_error_options": {"include": [], "exclude": []}, "indirect_selection": "eager", "log_format": "json", "exclude_resource_types": [], "require_resource_names_without_spaces": false, "send_anonymous_usage_stats": true, "populate_cache": true, "log_file_max_bytes": 10485760, "profile": "user"}}