{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/run-results/v6.json", "dbt_version": "2024.9.238", "generated_at": "2024-09-09T15:21:42.637625Z", "invocation_id": "94a60e17-7ece-408a-b78a-cbb7f3b67c5e", "env": {}}, "results": [{"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-09T15:21:17.714615Z", "completed_at": "2024-09-09T15:21:17.718827Z"}, {"name": "execute", "started_at": "2024-09-09T15:21:17.719303Z", "completed_at": "2024-09-09T15:21:18.638941Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.925325870513916, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01b6eaf9-0905-5985-0004-7d831394cc36"}, "message": "SUCCESS 1", "failures": null, "unique_id": "model.analytics.stg_tpch_orders", "compiled": true, "compiled_code": "with source as (\n\n    select * from raw.tpch_now.orders\n\n),\n\nrename as (\n\n    select\n    \n        o_orderkey as order_key,\n        o_custkey as customer_key,\n        o_orderstatus as status_code,\n        o_totalprice as total_price,\n        o_orderdate as order_date,\n        o_orderpriority as priority_code,\n        o_clerk as clerk_name,\n        o_shippriority as ship_priority,\n        o_comment as comment\n\n    from source\n\n)\n\nselect * from rename", "relation_name": "analytics.dbt_lleon.stg_tpch_orders"}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2024-09-09T15:21:18.676300Z", "completed_at": "2024-09-09T15:21:18.688060Z"}, {"name": "execute", "started_at": "2024-09-09T15:21:18.691920Z", "completed_at": "2024-09-09T15:21:19.328941Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.6808822154998779, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01b6eaf9-0905-598c-0004-7d831394d8ba"}, "message": null, "failures": 0, "unique_id": "test.analytics.unique_stg_tpch_orders_order_key.bd29f13cc9", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    order_key as unique_field,\n    count(*) as n_records\n\nfrom analytics.dbt_lleon.stg_tpch_orders\nwhere order_key is not null\ngroup by order_key\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2024-09-09T15:21:18.654254Z", "completed_at": "2024-09-09T15:21:18.687648Z"}, {"name": "execute", "started_at": "2024-09-09T15:21:18.690597Z", "completed_at": "2024-09-09T15:21:19.434933Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.7880964279174805, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01b6eaf9-0905-598c-0004-7d831394d8ca"}, "message": null, "failures": 0, "unique_id": "test.analytics.not_null_stg_tpch_orders_order_key.bb22e75ae8", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect order_key\nfrom analytics.dbt_lleon.stg_tpch_orders\nwhere order_key is null\n\n\n", "relation_name": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2024-09-09T15:21:18.669578Z", "completed_at": "2024-09-09T15:21:18.683843Z"}, {"name": "execute", "started_at": "2024-09-09T15:21:18.684950Z", "completed_at": "2024-09-09T15:21:19.479507Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.8318569660186768, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01b6eaf9-0905-598c-0004-7d831394d8be"}, "message": null, "failures": 0, "unique_id": "test.analytics.stg_tpch_orders_assert_positive_price", "compiled": true, "compiled_code": "\n\nwith orders as ( select * from analytics.dbt_lleon.stg_tpch_orders )\n\nselect *\nfrom   orders \nwhere  total_price < 0", "relation_name": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2024-09-09T15:21:18.650567Z", "completed_at": "2024-09-09T15:21:18.684369Z"}, {"name": "execute", "started_at": "2024-09-09T15:21:18.688534Z", "completed_at": "2024-09-09T15:21:19.483648Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.8374190330505371, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01b6eaf9-0905-598c-0004-7d831394d8ce"}, "message": null, "failures": 0, "unique_id": "test.analytics.macro_stg_tpch_orders_assert_pos_price", "compiled": true, "compiled_code": "\n\n\n\n\nselect * from analytics.dbt_lleon.stg_tpch_orders where total_price < 0\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-09T15:21:19.495292Z", "completed_at": "2024-09-09T15:21:19.529921Z"}, {"name": "execute", "started_at": "2024-09-09T15:21:19.531257Z", "completed_at": "2024-09-09T15:21:20.481444Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.9918966293334961, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01b6eaf9-0905-5985-0004-7d831394cc5e"}, "message": "SUCCESS 1", "failures": null, "unique_id": "model.analytics.order_items", "compiled": true, "compiled_code": "with orders as (\n    \n    select * from analytics.dbt_lleon.stg_tpch_orders\n\n),\n\nline_item as (\n\n    select * from analytics.dbt_lleon.stg_tpch_line_items\n\n)\nselect \n\n    line_item.order_item_key,\n    orders.order_key,\n    orders.customer_key,\n    line_item.part_key,\n    line_item.supplier_key,\n    orders.order_date,\n    orders.status_code as order_status_code,\n    \n    \n    line_item.is_return,\n    \n    line_item.line_number,\n    line_item.status_code as order_item_status_code,\n    line_item.ship_date,\n    line_item.commit_date,\n    line_item.receipt_date,\n    line_item.ship_mode,\n    line_item.extended_price,\n    line_item.quantity,\n    \n    -- extended_price is actually the line item total,\n    -- so we back out the extended price per item\n    (line_item.extended_price/nullif(line_item.quantity, 0))::decimal(16,3) as base_price,\n    line_item.discount_percentage,\n    (base_price * (1 - line_item.discount_percentage))::decimal(16,3) as discounted_price,\n\n    line_item.extended_price as gross_item_sales_amount,\n    (line_item.extended_price * (1 - line_item.discount_percentage))::decimal(16,3) as discounted_item_sales_amount,\n    -- We model discounts as negative amounts\n    (-1 * line_item.extended_price * line_item.discount_percentage)::decimal(16,3) as item_discount_amount,\n    line_item.tax_rate,\n    ((gross_item_sales_amount + item_discount_amount) * line_item.tax_rate)::decimal(16,3) as item_tax_amount,\n    (\n        gross_item_sales_amount + \n        item_discount_amount + \n        item_tax_amount\n    )::decimal(16,3) as net_item_sales_amount\n\nfrom\n    orders\ninner join line_item\n        on orders.order_key = line_item.order_key\norder by\n    orders.order_date", "relation_name": "analytics.dbt_lleon.order_items"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-09T15:21:19.491382Z", "completed_at": "2024-09-09T15:21:19.530730Z"}, {"name": "execute", "started_at": "2024-09-09T15:21:19.533406Z", "completed_at": "2024-09-09T15:21:20.674904Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 1.1862919330596924, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01b6eaf9-0905-5985-0004-7d831394cc5a"}, "message": "SUCCESS 1", "failures": null, "unique_id": "model.analytics.customer_flags", "compiled": true, "compiled_code": "\n\nwith customer as (\n\n    select * from analytics.dbt_lleon.stg_tpch_customers\n\n),\n\n    orders as (\n\n    select * from analytics.dbt_lleon.stg_tpch_orders\n\n),\n    \n    final as (\n\n    select\n    \n        customer.customer_key,\n        coalesce(sum(orders.total_price),0) as lifetime_value,\n        iff(lifetime_value > 3000000, 'Y', 'N') as is_high_value,\n        iff(lifetime_value between 1000000 and 2999999, 'Y', 'N') as is_mid_value,\n        iff(lifetime_value between 0 and 999999, 'Y','N') as is_low_value\n\n    from customer\n        inner join orders\n            on customer.customer_key = orders.customer_key\n    group by 1\n)\n\nselect * from final", "relation_name": "analytics.dbt_lleon.customer_flags"}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2024-09-09T15:21:19.494877Z", "completed_at": "2024-09-09T15:21:19.494882Z"}, {"name": "execute", "started_at": "2024-09-09T15:21:19.500248Z", "completed_at": "2024-09-09T15:21:20.750926Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 1.2618749141693115, "adapter_response": {"_message": "SUCCESS 8", "code": "SUCCESS", "rows_affected": 8, "query_id": "01b6eaf9-0905-5985-0004-7d831394cc62"}, "message": null, "failures": 0, "unique_id": "unit_test.analytics.customer_tier.tiers_are_working", "compiled": true, "compiled_code": "\n\nwith  __dbt__cte__stg_tpch_customers as (\n\n-- Fixture for stg_tpch_customers\nselect \n    \n        try_cast('629' as NUMBER(38,0))\n     as customer_key, try_cast(null as character varying(25)) as name, try_cast(null as character varying(40)) as address, try_cast(null as NUMBER(38,0)) as nation_key, try_cast(null as character varying(15)) as phone_number, try_cast(null as NUMBER(38,0)) as account_balance, try_cast(null as character varying(10)) as market_segment, try_cast(null as character varying(117)) as comment\nunion all\nselect \n    \n        try_cast('4' as NUMBER(38,0))\n     as customer_key, try_cast(null as character varying(25)) as name, try_cast(null as character varying(40)) as address, try_cast(null as NUMBER(38,0)) as nation_key, try_cast(null as character varying(15)) as phone_number, try_cast(null as NUMBER(38,0)) as account_balance, try_cast(null as character varying(10)) as market_segment, try_cast(null as character varying(117)) as comment\nunion all\nselect \n    \n        try_cast('1' as NUMBER(38,0))\n     as customer_key, try_cast(null as character varying(25)) as name, try_cast(null as character varying(40)) as address, try_cast(null as NUMBER(38,0)) as nation_key, try_cast(null as character varying(15)) as phone_number, try_cast(null as NUMBER(38,0)) as account_balance, try_cast(null as character varying(10)) as market_segment, try_cast(null as character varying(117)) as comment\nunion all\nselect \n    \n        try_cast('26' as NUMBER(38,0))\n     as customer_key, try_cast(null as character varying(25)) as name, try_cast(null as character varying(40)) as address, try_cast(null as NUMBER(38,0)) as nation_key, try_cast(null as character varying(15)) as phone_number, try_cast(null as NUMBER(38,0)) as account_balance, try_cast(null as character varying(10)) as market_segment, try_cast(null as character varying(117)) as comment\n),  __dbt__cte__stg_tpch_orders as (\n\n-- Fixture for stg_tpch_orders\nselect try_cast(null as NUMBER(38,0)) as order_key, \n    \n        try_cast('629' as NUMBER(38,0))\n     as customer_key, try_cast(null as character varying(1)) as status_code, \n    \n        try_cast('163443' as NUMBER(38,0))\n     as total_price, try_cast(null as DATE) as order_date, try_cast(null as character varying(15)) as priority_code, try_cast(null as character varying(15)) as clerk_name, try_cast(null as NUMBER(38,0)) as ship_priority, try_cast(null as character varying(79)) as comment\nunion all\nselect try_cast(null as NUMBER(38,0)) as order_key, \n    \n        try_cast('4' as NUMBER(38,0))\n     as customer_key, try_cast(null as character varying(1)) as status_code, \n    \n        try_cast('4134568' as NUMBER(38,0))\n     as total_price, try_cast(null as DATE) as order_date, try_cast(null as character varying(15)) as priority_code, try_cast(null as character varying(15)) as clerk_name, try_cast(null as NUMBER(38,0)) as ship_priority, try_cast(null as character varying(79)) as comment\nunion all\nselect try_cast(null as NUMBER(38,0)) as order_key, \n    \n        try_cast('1' as NUMBER(38,0))\n     as customer_key, try_cast(null as character varying(1)) as status_code, \n    \n        try_cast('1428872' as NUMBER(38,0))\n     as total_price, try_cast(null as DATE) as order_date, try_cast(null as character varying(15)) as priority_code, try_cast(null as character varying(15)) as clerk_name, try_cast(null as NUMBER(38,0)) as ship_priority, try_cast(null as character varying(79)) as comment\nunion all\nselect try_cast(null as NUMBER(38,0)) as order_key, \n    \n        try_cast('26' as NUMBER(38,0))\n     as customer_key, try_cast(null as character varying(1)) as status_code, \n    \n        try_cast('418512' as NUMBER(38,0))\n     as total_price, try_cast(null as DATE) as order_date, try_cast(null as character varying(15)) as priority_code, try_cast(null as character varying(15)) as clerk_name, try_cast(null as NUMBER(38,0)) as ship_priority, try_cast(null as character varying(79)) as comment\n), customer as (\n    select * from __dbt__cte__stg_tpch_customers\n),\n\norders as (\n    select * from __dbt__cte__stg_tpch_orders\n),\nfinal as (\n    select\n        customer.customer_key,\n        sum(orders.total_price) as lifetime_value,\n        case \n            when lifetime_value <= 200000 then 'tier1'\n            when lifetime_value > 2000000 then 'tier2'\n            when lifetime_value between 1000000 and 1999999 then 'tier3'\n            when lifetime_value between 0 and 999999 then 'tier4' \n        end as tier_name\n    from customer\n        inner join orders\n            on customer.customer_key = orders.customer_key\n    group by 1\n)\n\nselect * from final", "relation_name": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2024-09-09T15:21:20.496017Z", "completed_at": "2024-09-09T15:21:20.505348Z"}, {"name": "execute", "started_at": "2024-09-09T15:21:20.506101Z", "completed_at": "2024-09-09T15:21:21.267752Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.7818739414215088, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01b6eaf9-0905-598c-0004-7d831394d8f2"}, "message": null, "failures": 0, "unique_id": "test.analytics.unique_order_items_order_item_key.43a40b2837", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    order_item_key as unique_field,\n    count(*) as n_records\n\nfrom analytics.dbt_lleon.order_items\nwhere order_item_key is not null\ngroup by order_item_key\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2024-09-09T15:21:20.487221Z", "completed_at": "2024-09-09T15:21:20.502301Z"}, {"name": "execute", "started_at": "2024-09-09T15:21:20.502794Z", "completed_at": "2024-09-09T15:21:21.274922Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.7894973754882812, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01b6eaf9-0905-5985-0004-7d831394cc6e"}, "message": null, "failures": 0, "unique_id": "test.analytics.not_null_order_items_order_item_key.44b9fa7311", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect order_item_key\nfrom analytics.dbt_lleon.order_items\nwhere order_item_key is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-09T15:21:20.754071Z", "completed_at": "2024-09-09T15:21:20.758426Z"}, {"name": "execute", "started_at": "2024-09-09T15:21:20.758821Z", "completed_at": "2024-09-09T15:21:21.753602Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 1.0004465579986572, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01b6eaf9-0905-5985-0004-7d831394cc7a"}, "message": "SUCCESS 1", "failures": null, "unique_id": "model.analytics.customer_tier", "compiled": true, "compiled_code": "\n\nwith customer as (\n    select * from analytics.dbt_lleon.stg_tpch_customers\n),\n\norders as (\n    select * from analytics.dbt_lleon.stg_tpch_orders\n),\nfinal as (\n    select\n        customer.customer_key,\n        sum(orders.total_price) as lifetime_value,\n        case \n            when lifetime_value <= 200000 then 'tier1'\n            when lifetime_value > 2000000 then 'tier2'\n            when lifetime_value between 1000000 and 1999999 then 'tier3'\n            when lifetime_value between 0 and 999999 then 'tier4' \n        end as tier_name\n    from customer\n        inner join orders\n            on customer.customer_key = orders.customer_key\n    group by 1\n)\n\nselect * from final", "relation_name": "analytics.dbt_lleon.customer_tier"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-09T15:21:20.678397Z", "completed_at": "2024-09-09T15:21:20.684511Z"}, {"name": "execute", "started_at": "2024-09-09T15:21:20.684923Z", "completed_at": "2024-09-09T15:21:22.277619Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 1.6000642776489258, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01b6eaf9-0905-598c-0004-7d831394d902"}, "message": "SUCCESS 1", "failures": null, "unique_id": "model.analytics.dim_customers.v2", "compiled": true, "compiled_code": "\n\nwith customer as (\n\n    select * from analytics.dbt_lleon.stg_tpch_customers\n\n),\nnation as (\n\n    select * from analytics.dbt_lleon.stg_tpch_nations\n),\nregion as (\n\n    select * from analytics.dbt_lleon.stg_tpch_regions\n\n),\ncustomer_flags as (\n    select * from analytics.dbt_lleon.customer_flags\n),\n\nfinal as (\n    select \n        customer.customer_key,\n        customer.name,\n        customer.address,\n        --- Break the contract \n        -- nation.nation_key as nation_key, \n        nation.name as nation,\n        --- Break the contract again\n        -- region.region_key as region_key,\n        region.name as region,\n        customer.phone_number,\n        customer.account_balance,\n        customer.market_segment,\n        customer_flags.lifetime_value,\n        customer_flags.is_high_value,\n        customer_flags.is_mid_value,\n        customer_flags.is_low_value\n    from\n        customer\n        inner join nation\n            on customer.nation_key = nation.nation_key\n        inner join region\n            on nation.region_key = region.region_key\n        left join customer_flags\n            on customer.customer_key = customer_flags.customer_key\n)\nselect \n    *\nfrom\n    final\norder by\n    customer_key", "relation_name": "analytics.dbt_lleon.dim_customers_v2"}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2024-09-09T15:21:21.757095Z", "completed_at": "2024-09-09T15:21:21.763259Z"}, {"name": "execute", "started_at": "2024-09-09T15:21:21.763671Z", "completed_at": "2024-09-09T15:21:22.307981Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.5517942905426025, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01b6eaf9-0905-598c-0004-7d831394d916"}, "message": null, "failures": 0, "unique_id": "test.analytics.unique_customer_tier_customer_key.da86382e26", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    customer_key as unique_field,\n    count(*) as n_records\n\nfrom analytics.dbt_lleon.customer_tier\nwhere customer_key is not null\ngroup by customer_key\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-09T15:21:21.283726Z", "completed_at": "2024-09-09T15:21:21.289282Z"}, {"name": "execute", "started_at": "2024-09-09T15:21:21.290190Z", "completed_at": "2024-09-09T15:21:22.650136Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 1.3713550567626953, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01b6eaf9-0905-598c-0004-7d831394d90a"}, "message": "SUCCESS 1", "failures": null, "unique_id": "model.analytics.fct_orders", "compiled": true, "compiled_code": "\n\nwith orders as (\n    \n    select * from analytics.dbt_lleon.stg_tpch_orders \n\n),\norder_item as (\n    \n    select * from analytics.dbt_lleon.order_items\n\n),\norder_item_summary as (\n\n    select \n        order_key,\n        sum(gross_item_sales_amount) as gross_item_sales_amount,\n        sum(item_discount_amount) as item_discount_amount,\n        sum(item_tax_amount) as item_tax_amount,\n        sum(net_item_sales_amount) as net_item_sales_amount,\n        count_if( is_return = true ) as return_count\n    from order_item\n    group by\n        1\n),\nfinal as (\n\n    select \n\n        orders.order_key, \n        orders.order_date,\n        orders.customer_key,\n        orders.status_code,\n        orders.priority_code,\n        orders.clerk_name,\n        orders.ship_priority,     \n        1 as order_count,\n        order_item_summary.return_count,             \n        order_item_summary.gross_item_sales_amount,\n        order_item_summary.item_discount_amount,\n        order_item_summary.item_tax_amount,\n        order_item_summary.net_item_sales_amount\n    from\n        orders\n        inner join order_item_summary\n            on orders.order_key = order_item_summary.order_key\n)\nselect \n    *\nfrom\n    final\n\norder by\n    order_date", "relation_name": "analytics.dbt_lleon.fct_orders"}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2024-09-09T15:21:22.315018Z", "completed_at": "2024-09-09T15:21:22.321748Z"}, {"name": "execute", "started_at": "2024-09-09T15:21:22.322202Z", "completed_at": "2024-09-09T15:21:22.744555Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.4314861297607422, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01b6eaf9-0905-5985-0004-7d831394cc9e"}, "message": null, "failures": 0, "unique_id": "test.analytics.not_null_dim_customers_v2_customer_key.f3eeb01e0a", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect customer_key\nfrom analytics.dbt_lleon.dim_customers_v2\nwhere customer_key is null\n\n\n", "relation_name": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2024-09-09T15:21:22.281259Z", "completed_at": "2024-09-09T15:21:22.309485Z"}, {"name": "execute", "started_at": "2024-09-09T15:21:22.310728Z", "completed_at": "2024-09-09T15:21:22.759269Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.47907423973083496, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01b6eaf9-0905-5985-0004-7d831394cc9a"}, "message": null, "failures": 0, "unique_id": "test.analytics.accepted_values_dim_customers_v2_region__AFRICA__MIDDLE_EAST__ASIA__EUROPE__AMERICA.7ae788b269", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        region as value_field,\n        count(*) as n_records\n\n    from analytics.dbt_lleon.dim_customers_v2\n    group by region\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'AFRICA','MIDDLE EAST','ASIA','EUROPE','AMERICA'\n)\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-09T15:21:22.761947Z", "completed_at": "2024-09-09T15:21:22.761950Z"}, {"name": "execute", "started_at": "2024-09-09T15:21:22.762301Z", "completed_at": "2024-09-09T15:21:22.762724Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0017061233520507812, "adapter_response": {}, "message": "NO-OP", "failures": null, "unique_id": "saved_query.analytics.metrics_cumulative_revenue_total", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2024-09-09T15:21:22.654413Z", "completed_at": "2024-09-09T15:21:22.660978Z"}, {"name": "execute", "started_at": "2024-09-09T15:21:22.661409Z", "completed_at": "2024-09-09T15:21:23.021367Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.3678474426269531, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01b6eaf9-0905-5985-0004-7d831394ccae"}, "message": null, "failures": 0, "unique_id": "test.analytics.unique_dim_customers_v2_customer_key.6ef61552c6", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    customer_key as unique_field,\n    count(*) as n_records\n\nfrom analytics.dbt_lleon.dim_customers_v2\nwhere customer_key is not null\ngroup by customer_key\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-09T15:21:21.280185Z", "completed_at": "2024-09-09T15:21:21.287161Z"}, {"name": "execute", "started_at": "2024-09-09T15:21:21.287628Z", "completed_at": "2024-09-09T15:21:23.132495Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 1.8541533946990967, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01b6eaf9-0905-5985-0004-7d831394cc8a"}, "message": "SUCCESS 1", "failures": null, "unique_id": "model.analytics.fct_order_items", "compiled": true, "compiled_code": "\n\nwith order_item as (\n    \n    select * from analytics.dbt_lleon.order_items\n\n),\npart_supplier as (\n    \n    select * from analytics.dbt_lleon.part_suppliers\n\n),\nfinal as (\n    select \n        order_item.order_item_key,\n        order_item.order_key,\n        order_item.order_date,\n        order_item.customer_key,\n        order_item.part_key,\n        order_item.supplier_key,\n        order_item.order_item_status_code,\n        order_item.is_return,\n        order_item.line_number,\n        order_item.ship_date,\n        order_item.commit_date,\n        order_item.receipt_date,\n        order_item.ship_mode,\n        part_supplier.cost as supplier_cost,\n        \n        order_item.base_price,\n        order_item.discount_percentage,\n        order_item.discounted_price,\n        order_item.tax_rate,\n        part_supplier.nation_key,\n        1 as order_item_count,\n        order_item.quantity,\n        order_item.gross_item_sales_amount,\n        order_item.discounted_item_sales_amount,\n        order_item.item_discount_amount,\n        order_item.item_tax_amount,\n        order_item.net_item_sales_amount\n\n    from\n        order_item\n        inner join part_supplier\n            on order_item.part_key = part_supplier.part_key and\n                order_item.supplier_key = part_supplier.supplier_key\n)\nselect \n    *\nfrom\n    final\norder by\n    order_date", "relation_name": "analytics.dbt_lleon.fct_order_items"}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2024-09-09T15:21:22.765500Z", "completed_at": "2024-09-09T15:21:22.772508Z"}, {"name": "execute", "started_at": "2024-09-09T15:21:22.772935Z", "completed_at": "2024-09-09T15:21:23.203349Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.4387524127960205, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01b6eaf9-0905-598c-0004-7d831394d93a"}, "message": null, "failures": 0, "unique_id": "test.analytics.not_null_fct_orders_order_key.6a6f83ab15", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect order_key\nfrom analytics.dbt_lleon.fct_orders\nwhere order_key is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-09T15:21:23.207531Z", "completed_at": "2024-09-09T15:21:23.207534Z"}, {"name": "execute", "started_at": "2024-09-09T15:21:23.208102Z", "completed_at": "2024-09-09T15:21:23.208854Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0027055740356445312, "adapter_response": {}, "message": "NO-OP", "failures": null, "unique_id": "saved_query.analytics.metrics_sales_by_region", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2024-09-09T15:21:23.024580Z", "completed_at": "2024-09-09T15:21:23.040095Z"}, {"name": "execute", "started_at": "2024-09-09T15:21:23.040605Z", "completed_at": "2024-09-09T15:21:23.514403Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.4907698631286621, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01b6eaf9-0905-598c-0004-7d831394d942"}, "message": null, "failures": 0, "unique_id": "test.analytics.relationships_fct_orders_customer_key__customer_key__ref_dim_customers_.018eb0a60b", "compiled": true, "compiled_code": "\n    \n    \n\nwith child as (\n    select customer_key as from_field\n    from analytics.dbt_lleon.fct_orders\n    where customer_key is not null\n),\n\nparent as (\n    select customer_key as to_field\n    from analytics.dbt_lleon.dim_customers_v2\n)\n\nselect\n    from_field\n\nfrom child\nleft join parent\n    on child.from_field = parent.to_field\n\nwhere parent.to_field is null\n\n\n", "relation_name": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2024-09-09T15:21:23.136035Z", "completed_at": "2024-09-09T15:21:23.142027Z"}, {"name": "execute", "started_at": "2024-09-09T15:21:23.142436Z", "completed_at": "2024-09-09T15:21:23.545089Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.40993189811706543, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01b6eaf9-0905-598c-0004-7d831394d94e"}, "message": null, "failures": 0, "unique_id": "test.analytics.unique_fct_orders_order_key.f5e7a90273", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    order_key as unique_field,\n    count(*) as n_records\n\nfrom analytics.dbt_lleon.fct_orders\nwhere order_key is not null\ngroup by order_key\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2024-09-09T15:21:23.213374Z", "completed_at": "2024-09-09T15:21:23.223502Z"}, {"name": "execute", "started_at": "2024-09-09T15:21:23.223947Z", "completed_at": "2024-09-09T15:21:23.612341Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.40041089057922363, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01b6eaf9-0905-5985-0004-7d831394ccc2"}, "message": null, "failures": 0, "unique_id": "test.analytics.not_null_fct_order_items_nation_key.c3faf47d8e", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect nation_key\nfrom analytics.dbt_lleon.fct_order_items\nwhere nation_key is null\n\n\n", "relation_name": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2024-09-09T15:21:23.517545Z", "completed_at": "2024-09-09T15:21:23.525322Z"}, {"name": "execute", "started_at": "2024-09-09T15:21:23.525760Z", "completed_at": "2024-09-09T15:21:23.904013Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.38735032081604004, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01b6eaf9-0905-5985-0004-7d831394ccd6"}, "message": null, "failures": 0, "unique_id": "test.analytics.not_null_fct_order_items_order_item_key.47516a6371", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect order_item_key\nfrom analytics.dbt_lleon.fct_order_items\nwhere order_item_key is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-09T15:21:22.748053Z", "completed_at": "2024-09-09T15:21:22.753378Z"}, {"name": "execute", "started_at": "2024-09-09T15:21:22.753779Z", "completed_at": "2024-09-09T15:21:24.053029Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 1.3060178756713867, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01b6eaf9-0905-598c-0004-7d831394d946"}, "message": "SUCCESS 1", "failures": null, "unique_id": "model.analytics.dim_customers.v1", "compiled": true, "compiled_code": "\n\nwith customer as (\n\n    select * from analytics.dbt_lleon.stg_tpch_customers\n\n),\nnation as (\n\n    select * from analytics.dbt_lleon.stg_tpch_nations\n),\nregion as (\n\n    select * from analytics.dbt_lleon.stg_tpch_regions\n\n),\ncustomer_tier as (\n  \n    select * from analytics.dbt_lleon.customer_tier\n\n),\nfinal as (\n    select \n        customer.customer_key,\n        customer.name,\n        customer.address,\n        \n        nation.name as nation,\n        \n        region.name as region,\n        customer.phone_number,\n        customer.account_balance,\n        customer.market_segment,\n        customer_tier.lifetime_value,\n        customer_tier.tier_name\n    from\n        customer\n        inner join nation\n            on customer.nation_key = nation.nation_key\n        inner join region\n            on nation.region_key = region.region_key\n        left join customer_tier\n            on customer.customer_key = customer_tier.customer_key\n)\nselect \n    *\nfrom\n    final\norder by\n    customer_key", "relation_name": "analytics.dbt_lleon.dim_customers_v1"}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2024-09-09T15:21:23.617368Z", "completed_at": "2024-09-09T15:21:23.627625Z"}, {"name": "execute", "started_at": "2024-09-09T15:21:23.628282Z", "completed_at": "2024-09-09T15:21:24.151488Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.5355217456817627, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01b6eaf9-0905-598c-0004-7d831394d95e"}, "message": null, "failures": 0, "unique_id": "test.analytics.unique_fct_order_items_order_item_key.4d6426a255", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    order_item_key as unique_field,\n    count(*) as n_records\n\nfrom analytics.dbt_lleon.fct_order_items\nwhere order_item_key is not null\ngroup by order_item_key\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2024-09-09T15:21:23.548418Z", "completed_at": "2024-09-09T15:21:23.575801Z"}, {"name": "execute", "started_at": "2024-09-09T15:21:23.576286Z", "completed_at": "2024-09-09T15:21:24.195436Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.6480326652526855, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01b6eaf9-0905-5985-0004-7d831394ccda"}, "message": null, "failures": 0, "unique_id": "test.analytics.orders_sales_amount_equals_order_item_sales_amount.a260da713f", "compiled": true, "compiled_code": "\n    with a as (\n        \n    select\n        \n        order_key as col_1,\n        \n        sum(net_item_sales_amount) as expression\n    from\n        analytics.dbt_lleon.fct_order_items\n    \n    group by\n        1\n        \n    \n\n    ),\n    b as (\n        \n    select\n        \n        order_key as col_1,\n        \n        sum(net_item_sales_amount) as expression\n    from\n        analytics.dbt_lleon.fct_orders\n    \n    group by\n        1\n        \n    \n\n    ),\n    final as (\n\n        select\n            coalesce(a.col_1, b.col_1) as col_1,\n            \n            a.expression,\n            b.expression as compare_expression,\n            abs(coalesce(a.expression, 0) - coalesce(b.expression, 0)) as expression_difference,\n            abs(coalesce(a.expression, 0) - coalesce(b.expression, 0))/\n                nullif(a.expression * 1.0, 0) as expression_difference_percent\n        from\n        \n            a\n            full outer join\n            b on\n            a.col_1 = b.col_1 \n            \n    )\n    -- DEBUG:\n    -- select * from final\n    select\n        *\n    from final\n    where\n        \n        expression_difference > 0.0\n        ", "relation_name": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2024-09-09T15:21:24.065453Z", "completed_at": "2024-09-09T15:21:24.074301Z"}, {"name": "execute", "started_at": "2024-09-09T15:21:24.075635Z", "completed_at": "2024-09-09T15:21:24.500298Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.4430673122406006, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01b6eaf9-0905-5985-0004-7d831394ccee"}, "message": null, "failures": 0, "unique_id": "test.analytics.not_null_dim_customers_v1_customer_key.e87078db40", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect customer_key\nfrom analytics.dbt_lleon.dim_customers_v1\nwhere customer_key is null\n\n\n", "relation_name": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2024-09-09T15:21:24.058592Z", "completed_at": "2024-09-09T15:21:24.071803Z"}, {"name": "execute", "started_at": "2024-09-09T15:21:24.072436Z", "completed_at": "2024-09-09T15:21:24.519776Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.4629826545715332, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01b6eaf9-0905-598c-0004-7d831394d972"}, "message": null, "failures": 0, "unique_id": "test.analytics.accepted_values_dim_customers_v1_region__AFRICA__MIDDLE_EAST__ASIA__EUROPE__AMERICA.f7bdfd165a", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        region as value_field,\n        count(*) as n_records\n\n    from analytics.dbt_lleon.dim_customers_v1\n    group by region\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'AFRICA','MIDDLE EAST','ASIA','EUROPE','AMERICA'\n)\n\n\n", "relation_name": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2024-09-09T15:21:24.155330Z", "completed_at": "2024-09-09T15:21:24.163388Z"}, {"name": "execute", "started_at": "2024-09-09T15:21:24.163804Z", "completed_at": "2024-09-09T15:21:24.543692Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.3894767761230469, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01b6eaf9-0905-5985-0004-7d831394ccf2"}, "message": null, "failures": 0, "unique_id": "test.analytics.unique_dim_customers_v1_customer_key.3be86f0867", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    customer_key as unique_field,\n    count(*) as n_records\n\nfrom analytics.dbt_lleon.dim_customers_v1\nwhere customer_key is not null\ngroup by customer_key\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-09T15:21:24.210503Z", "completed_at": "2024-09-09T15:21:24.213525Z"}, {"name": "execute", "started_at": "2024-09-09T15:21:24.214005Z", "completed_at": "2024-09-09T15:21:24.675861Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.4679067134857178, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01b6eaf9-0905-598c-0004-7d831394d976"}, "message": "SUCCESS 1", "failures": null, "unique_id": "model.analytics.agg_daily_returned_orders", "compiled": true, "compiled_code": "with fct_order_items as (\n    select * from analytics.dbt_lleon.fct_order_items\n),\n\nfinal as (\n    select\n        fct_order_items.order_date as ds\n        , cast(1.0*count(case when is_return then order_item_key else null end) as float) as y\n    from fct_order_items\n    group by 1\n    order by 1 desc\n)\n\nselect * from final", "relation_name": "analytics.dbt_lleon.agg_daily_returned_orders"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-09T15:21:24.503903Z", "completed_at": "2024-09-09T15:21:24.506871Z"}, {"name": "execute", "started_at": "2024-09-09T15:21:24.507302Z", "completed_at": "2024-09-09T15:21:25.025047Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.5223264694213867, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01b6eaf9-0905-598c-0004-7d831394d98a"}, "message": "SUCCESS 1", "failures": null, "unique_id": "model.analytics.agg_returned_orders_by_month", "compiled": true, "compiled_code": "with fct_order_items as (\n    select * from analytics.dbt_lleon.fct_order_items\n),\n\nfinal as (\n    select\n        date_trunc(MONTH, fct_order_items.order_date) as order_month \n        , count(case when is_return then order_item_key else null end) as returned_orders\n        , 1.0* returned_orders / nullif (\n            count(order_item_key)\n            , 0\n        ) as return_rate\n        , count(*) as row_count\n    from fct_order_items\n    group by 1\n    order by 1 desc\n)\n\nselect * from final", "relation_name": "analytics.dbt_lleon.agg_returned_orders_by_month"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-09T15:21:24.546821Z", "completed_at": "2024-09-09T15:21:24.549840Z"}, {"name": "execute", "started_at": "2024-09-09T15:21:24.550250Z", "completed_at": "2024-09-09T15:21:25.108787Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.5628261566162109, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01b6eaf9-0905-598c-0004-7d831394d98e"}, "message": "SUCCESS 1", "failures": null, "unique_id": "model.analytics.agg_ship_modes_hardcoded_pivot", "compiled": true, "compiled_code": "/* Create a pivot table with hard-coded columns based on a query of the ship modes that are in the system */\n\nwith merged as (\n    select\n        date_part('year', order_date) as order_year,\n        ship_mode,\n        gross_item_sales_amount\n    from analytics.dbt_lleon.fct_order_items\n)\n\nselect\n    * \nfrom\n    merged\n    -- have to manually map strings in the pivot operation\n    pivot(sum(gross_item_sales_amount) for ship_mode in (\n        'AIR',\n        'REG AIR',\n        'FOB',\n        'RAIL',\n        'MAIL',\n        'SHIP',\n        'TRUCK'\n    )) as p \n\norder by order_year", "relation_name": "analytics.dbt_lleon.agg_ship_modes_hardcoded_pivot"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-09T15:21:24.679344Z", "completed_at": "2024-09-09T15:21:24.681833Z"}, {"name": "execute", "started_at": "2024-09-09T15:21:24.682229Z", "completed_at": "2024-09-09T15:21:25.148864Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.4703803062438965, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01b6eaf9-0905-5985-0004-7d831394cd0a"}, "message": "SUCCESS 1", "failures": null, "unique_id": "model.analytics.monthly_gross_revenue", "compiled": true, "compiled_code": "select \n    date_trunc(MONTH, fct_order_items.order_date) as order_month\n    , sum(fct_order_items.gross_item_sales_amount) as gross_revenue\nfrom analytics.dbt_lleon.fct_order_items\ngroup by 1", "relation_name": "analytics.dbt_lleon.monthly_gross_revenue"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-09T15:21:24.522910Z", "completed_at": "2024-09-09T15:21:24.697364Z"}, {"name": "execute", "started_at": "2024-09-09T15:21:24.697792Z", "completed_at": "2024-09-09T15:21:25.266047Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.7440130710601807, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01b6eaf9-0905-598c-0004-7d831394d996"}, "message": "SUCCESS 1", "failures": null, "unique_id": "model.analytics.agg_ship_modes_dynamic_pivot", "compiled": true, "compiled_code": "/* Create a pivot table with dynamic columns based on the ship modes that are in the system */\n\n\n\nselect\n    date_part('year', order_date) as order_year,\n\n    sum(case when ship_mode = 'FOB' then gross_item_sales_amount end) as \"FOB_amount\",\n    sum(case when ship_mode = 'AIR' then gross_item_sales_amount end) as \"AIR_amount\",\n    sum(case when ship_mode = 'REG AIR' then gross_item_sales_amount end) as \"REG_AIR_amount\",\n    sum(case when ship_mode = 'SHIP' then gross_item_sales_amount end) as \"SHIP_amount\",\n    sum(case when ship_mode = 'TRUCK' then gross_item_sales_amount end) as \"TRUCK_amount\",\n    sum(case when ship_mode = 'MAIL' then gross_item_sales_amount end) as \"MAIL_amount\",\n    sum(case when ship_mode = 'RAIL' then gross_item_sales_amount end) as \"RAIL_amount\"\n    \n\nfrom analytics.dbt_lleon.fct_order_items\ngroup by 1", "relation_name": "analytics.dbt_lleon.agg_ship_modes_dynamic_pivot"}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2024-09-09T15:21:25.269595Z", "completed_at": "2024-09-09T15:21:25.275930Z"}, {"name": "execute", "started_at": "2024-09-09T15:21:25.276355Z", "completed_at": "2024-09-09T15:21:25.697059Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.4284062385559082, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01b6eaf9-0905-5985-0004-7d831394cd26"}, "message": null, "failures": 0, "unique_id": "test.analytics.unique_monthly_gross_revenue_order_month.2b4d4215f7", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    order_month as unique_field,\n    count(*) as n_records\n\nfrom analytics.dbt_lleon.monthly_gross_revenue\nwhere order_month is not null\ngroup by order_month\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "warn", "timing": [{"name": "compile", "started_at": "2024-09-09T15:21:25.152661Z", "completed_at": "2024-09-09T15:21:25.158515Z"}, {"name": "execute", "started_at": "2024-09-09T15:21:25.159933Z", "completed_at": "2024-09-09T15:21:25.745639Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.5939087867736816, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01b6eaf9-0905-598c-0004-7d831394d9aa"}, "message": "Got 1 result, configured to warn if != 0", "failures": 1, "unique_id": "test.analytics.agg_returned_orders_by_month_threshold", "compiled": true, "compiled_code": "\n\nwith agg_returned_orders_by_month as ( select * from analytics.dbt_lleon.agg_returned_orders_by_month )\n\nselect *\nfrom agg_returned_orders_by_month\nwhere order_month = (select max(order_month) from agg_returned_orders_by_month)\nand return_rate > 0.60", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-09T15:21:25.029606Z", "completed_at": "2024-09-09T15:21:25.033968Z"}, {"name": "execute", "started_at": "2024-09-09T15:21:25.034538Z", "completed_at": "2024-09-09T15:21:25.846504Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.8180067539215088, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01b6eaf9-0905-5985-0004-7d831394cd1e"}, "message": "SUCCESS 1", "failures": null, "unique_id": "model.analytics.use_variables", "compiled": true, "compiled_code": "-- This is here to show that data older than start_date exists - run this first\n-- select min(order_date) from analytics.dbt_lleon.fct_order_items\n\n-- start_date is defined in the dbt_project.yml \n-- to illustrate overriding variables from the command line, run dbt run -m use_variables --vars '{\"start_date\": \"1996-01-01\"}'\nselect * from analytics.dbt_lleon.fct_order_items where order_date >= '1999-01-01'", "relation_name": "analytics.dbt_lleon.use_variables"}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2024-09-09T15:21:25.851965Z", "completed_at": "2024-09-09T15:21:25.864086Z"}, {"name": "execute", "started_at": "2024-09-09T15:21:25.865010Z", "completed_at": "2024-09-09T15:21:26.249711Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.399505615234375, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01b6eaf9-0905-5985-0004-7d831394cd3a"}, "message": null, "failures": 0, "unique_id": "test.analytics.not_null_use_variables_order_item_key.c2bd602686", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect order_item_key\nfrom analytics.dbt_lleon.use_variables\nwhere order_item_key is null\n\n\n", "relation_name": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2024-09-09T15:21:25.858304Z", "completed_at": "2024-09-09T15:21:25.864596Z"}, {"name": "execute", "started_at": "2024-09-09T15:21:25.866291Z", "completed_at": "2024-09-09T15:21:26.498178Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.6475496292114258, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01b6eaf9-0905-5985-0004-7d831394cd36"}, "message": null, "failures": 0, "unique_id": "test.analytics.unique_use_variables_order_item_key.fb5576fe0e", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    order_item_key as unique_field,\n    count(*) as n_records\n\nfrom analytics.dbt_lleon.use_variables\nwhere order_item_key is not null\ngroup by order_item_key\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-09T15:21:25.112096Z", "completed_at": "2024-09-09T15:21:25.129661Z"}, {"name": "execute", "started_at": "2024-09-09T15:21:25.130125Z", "completed_at": "2024-09-09T15:21:39.734873Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 14.623637914657593, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01b6eaf9-0905-5985-0004-7d831394cd22"}, "message": "SUCCESS 1", "failures": null, "unique_id": "model.analytics.forecast_daily_returns", "compiled": true, "compiled_code": "import pandas as pd # import packages\nfrom prophet import Prophet\n\ndef model( dbt, session ):\n    \n    dbt.config(\n        materialized=\"table\", # the incremental materialization is also supported\n        packages=['pandas==1.5.3','Prophet','holidays==0.18'] # how to import python libraries in dbt's context\n    )\n\n    # use historical data to fit model\n    df = dbt.ref(\"agg_daily_returned_orders\").to_pandas() # use dbt.ref to reference other models in your dbt project\n    df.columns = df.columns.str.lower()\n    m = Prophet()\n    m.fit(df)\n    \n    # forecast returns and output dataframe\n    future = m.make_future_dataframe(periods=365)\n    df = m.predict(future)\n    \n    return df # return final dataset via data frame. This is required. \n\n# The Preview button in the IDE is disabled, but you can iterate by building the object and then opening a new tab and running... select * from ref('forecast_daily_returns')\n# Tests and Documentation can also be applied to python models, in the same manner as sql models (.yml file or custom tests).\n\n\n# This part is user provided model code\n# you will need to copy the next section to run the code\n# COMMAND ----------\n# this part is dbt logic for get ref work, do not modify\n\ndef ref(*args, **kwargs):\n    refs = {\"agg_daily_returned_orders\": \"analytics.dbt_lleon.agg_daily_returned_orders\"}\n    key = '.'.join(args)\n    version = kwargs.get(\"v\") or kwargs.get(\"version\")\n    if version:\n        key += f\".v{version}\"\n    dbt_load_df_function = kwargs.get(\"dbt_load_df_function\")\n    return dbt_load_df_function(refs[key])\n\n\ndef source(*args, dbt_load_df_function):\n    sources = {}\n    key = '.'.join(args)\n    return dbt_load_df_function(sources[key])\n\n\nconfig_dict = {}\n\n\nclass config:\n    def __init__(self, *args, **kwargs):\n        pass\n\n    @staticmethod\n    def get(key, default=None):\n        return config_dict.get(key, default)\n\nclass this:\n    \"\"\"dbt.this() or dbt.this.identifier\"\"\"\n    database = \"analytics\"\n    schema = \"dbt_lleon\"\n    identifier = \"forecast_daily_returns\"\n    \n    def __repr__(self):\n        return 'analytics.dbt_lleon.forecast_daily_returns'\n\n\nclass dbtObj:\n    def __init__(self, load_df_function) -> None:\n        self.source = lambda *args: source(*args, dbt_load_df_function=load_df_function)\n        self.ref = lambda *args, **kwargs: ref(*args, **kwargs, dbt_load_df_function=load_df_function)\n        self.config = config\n        self.this = this()\n        self.is_incremental = False\n\n# COMMAND ----------\n\n# To run this in snowsight, you need to select entry point to be main\n# And you may have to modify the return type to text to get the result back\n# def main(session):\n#     dbt = dbtObj(session.table)\n#     df = model(dbt, session)\n#     return df.collect()\n\n# to run this in local notebook, you need to create a session following examples https://github.com/Snowflake-Labs/sfguide-getting-started-snowpark-python\n# then you can do the following to run model\n# dbt = dbtObj(session.table)\n# df = model(dbt, session)\n\n", "relation_name": "analytics.dbt_lleon.forecast_daily_returns"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-09T15:21:39.738882Z", "completed_at": "2024-09-09T15:21:39.742722Z"}, {"name": "execute", "started_at": "2024-09-09T15:21:39.743134Z", "completed_at": "2024-09-09T15:21:40.298458Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.560462474822998, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01b6eaf9-0905-5985-0004-7d831394cd76"}, "message": "SUCCESS 1", "failures": null, "unique_id": "model.analytics.actual_and_forecasted_returns", "compiled": true, "compiled_code": "with agg_daily_returned_orders as (\n    select * from analytics.dbt_lleon.agg_daily_returned_orders\n),\n\nforecast_daily_returns as (\n    select * from analytics.dbt_lleon.forecast_daily_returns\n),\n\nfinal as (\n    select \n        \"DS\" as relevant_date, \n        \"Y\" as returned_orders, \n        false as is_forecast,\n        null as lower_bound,\n        null as upper_bound\n    from agg_daily_returned_orders\n\n    union all \n\n    select \n        cast(to_timestamp_ntz(\"ds\"::varchar) as date) as relevant_date, \n        \"yhat\" as returned_orders, \n        true as is_forecast,\n        \"yhat_lower\" as lower_bound,\n        \"yhat_upper\" as upper_bound \n    from forecast_daily_returns\n    where relevant_date > (select max(\"DS\") from agg_daily_returned_orders)\n)\n\nselect * from final", "relation_name": "analytics.dbt_lleon.actual_and_forecasted_returns"}], "elapsed_time": 26.61672282218933, "args": {"introspect": true, "partial_parse": true, "exclude": [], "use_colors_file": true, "send_anonymous_usage_stats": true, "profiles_dir": "./", "state": "__state", "version_check": true, "vars": {}, "log_file_max_bytes": 10485760, "include_saved_query": false, "partial_parse_file_diff": true, "which": "build", "printer_width": 80, "empty": false, "require_explicit_package_overrides_for_builtin_materializations": true, "invocation_command": "dbt ", "log_level_file": "debug", "write_json": true, "exclude_resource_types": [], "log_level": "info", "static_parser": true, "resource_types": [], "strict_mode": false, "use_colors": true, "print": true, "quiet": false, "populate_cache": true, "warn_error_options": {"include": [], "exclude": []}, "target_path": "target", "source_freshness_run_project_hooks": false, "select": ["stg_tpch_orders+"], "indirect_selection": "eager", "log_format": "json", "cache_selected_only": false, "profile": "user", "show": false, "macro_debugging": false, "export_saved_queries": false, "project_dir": "/app/dbt_project/b9f8efe7-9778-45c3-a925-d23f796e14fb", "log_path": "logs", "show_resource_report": false, "require_resource_names_without_spaces": false, "log_format_file": "json", "favor_state": false, "defer": true}}